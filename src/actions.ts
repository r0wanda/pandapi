// Keyed by the corresponding "action prefix"
export const ApiEndpoints = {
  REGISTER: 'v1/listener/register',
  EMAIL_PASSWORD: 'v1/listener/emailPassword',
  VALIDATE_PASSWORD_RESET_TOKEN: 'v1/listener/validatePasswordResetToken',
  RESET_PASSWORD: 'v1/listener/resetPassword',
  UPDATE_ACCOUNT: 'v1/listener/updateAccount',
  ADD_TRACKING_CODE: 'v1/listener/addTrackingCode',
  SET_EXPLICIT_PIN: 'v1/listener/setExplicitPIN',
  EMAIL_EXPLICIT_PIN: 'v1/listener/emailExplicitPINRescue',
  UPDATE_SETTINGS: 'v1/listener/updateSettings',
  GET_PROFILE: 'v1/listener/getProfile',
  SET_PROFILE: 'v1/listener/setProfile',
  ADD_TIRED_SONG: 'v3/station/addTiredSong',
  ACCOUNT_MESSAGE_DISMISSED: 'v1/listener/accountMessageDismissed',
  LOGIN: 'v1/auth/login',
  LOGOUT: 'v1/auth/logout',
  DEVICE_LOGIN: 'v1/auth/deviceLogin',
  ANON_LOGIN: 'v1/auth/anonymousLogin',
  FETCH_GENRE_CATEGORIES: 'v1/music/genrecategories',
  FETCH_GENRES_BY_CATEGORY_ID: 'v1/music/genres',
  FETCH_FULL_LYRICS: 'v4/catalog/getFullLyricsV2',
  GET_FRAGMENT: 'v1/playlist/getFragment',
  FETCH_STATIONS: 'v1/station/getStations',
  CREATE_STATION: 'v1/station/createStation',
  REMOVE_STATION: 'v1/station/removeStation',
  UPDATE_STATION: 'v1/station/updateStation',
  ADD_SEED: 'v1/station/addSeed',
  GET_OR_SET_SHUFFLE_STATIONS: 'v1/station/shuffle',
  DELETE_SEED: 'v1/station/deleteSeed',
  FETCH_NARRATIVE: 'v1/playlist/narrative',
  ADD_FEEDBACK: 'v1/station/addFeedback', // cspell:disable-line
  GET_FEEDBACK: 'v1/station/getFeedback',
  DELETE_FEEDBACK: 'v1/station/deleteFeedback', // cspell:disable-line
  INSERT_ARTIST_MESSAGE_METRIC: 'v1/amp/insertArtistMessageMetric',
  INSERT_VOICE_TRACK_METRIC: 'v1/mip/insertVoiceTrackMetric',
  GET_ARTIST_EVENTS: 'v1/mip/getArtistPageConcerts',
  FLAG_MESSAGE: 'v1/amp/flagMessage',
  UPDATE_SHUFFLE_STATION: 'v1/station/updateShuffleStation',
  VERIFY_HYBRID_STATION_CHECKSUM: 'v1/station/verifyHybridStationChecksum',
  TRACK_STARTED: 'v1/station/trackStarted',
  PLAYBACK_PAUSED: 'v1/station/playbackPaused',
  PLAYBACK_RESUMED: 'v1/station/playbackResumed',
  ARTIST_SHARE: 'v1/share/artist',
  SEARCH: 'v1/search/fullSearch',
  SEARCH_RECOMMENDATIONS: 'v1/search/getStationRecommendations',
  GET_ADLIST: 'v1/ad/getAdList',
  USE_SKIP_REWARD: 'v1/ad/useSkipReward',
  USE_REPLAY_REWARD: 'v1/ad/useReplayReward',
  START_VALUE_EXCHANGE: 'v1/ad/startValueExchange',
  FACEBOOK_CONNECT: 'v1/facebook/connect',
  FACEBOOK_DISCONNECT: 'v1/facebook/disconnect',
  GET_REPLAY_TRACK: 'v1/ondemand/getReplayTrack',
  REGISTER_IMPRESSION: 'v1/ad/registerImpression',
  REGISTER_VIDEO_AD_IMPRESSION: 'v1/ad/registerVideoAdImpression',
  REGISTER_AUDIO_PROGRAMMATIC_IMPRESSION: 'v1/ad/registerAudioProgrammaticImpression',
  SEND_NEW_SITE_FEEDBACK: 'v1/feedback', // All stats calls go to the same url, this "endpoint" is really just used as a differentiator. @todo https://jira.savagebeast.com/browse/WEB-8689
  DELETE_LISTENER: 'v1/listener/deleteListener',
  LOG_OUT_ALL_DEVICES: 'v1/auth/logoutAll',
  GET_SEED_SUGGESTIONS: 'v1/search/getSeedSuggestions',
  GET_STATION_DETAILS: 'v1/station/getStationDetails',
  GET_SEEDS: 'v1/station/getSeeds',
  GET_STATION_FEEDBACK: 'v1/station/getStationFeedback',
  BROKEN_AD: 'v1/ad/brokenAd',
  GET_AVAILABLE_PRODUCTS: 'v2/charon/getAvailableProducts',
  ACQUIRE_PRODUCT: 'v1/billing/acquireProduct',
  PREPARE_TO_ACQUIRE_PAYPAL_PRODUCT: 'v1/billing/prepareToAcquirePaypalProduct',
  GET_SUBSCRIPTION_INFO_V2: 'v1/billing/infoV2',
  GET_SPECIAL_OFFER_V2: 'v2/charon/getSpecialOffer',
  UPDATE_BILLING_INFO_V2: 'v1/billing/updateBillingInformationV2',
  GET_CREDIT_CARD_V2: 'v1/billing/getCreditCardV2',
  CANCEL_CURRENT_PRODUCT: 'v1/billing/cancelCurrentProduct',
  GET_EXPERIMENTS_FOR_LISTENER: 'v1/abexperiment/getListenerExperimentsByHoldoutGroups',

  // Discovery Tuner
  INTERACTIVE_RADIO_SET_MODE: 'v1/interactiveradio/setAndGetAvailableModes ',
  INTERACTIVE_RADIO_GET_MODES: 'v1/interactiveradio/getAvailableModesSimple',

  // On demand
  CATALOG_ANNOTATE_OBJECTS: 'v4/catalog/annotateObjects',
  CATALOG_ANNOTATE_OBJECTS_SIMPLE: 'v4/catalog/annotateObjectsSimple',
  CATALOG_GET_DETAILS: 'v4/catalog/getDetails',
  CATALOG_GET_ARTIST_DISCOGRAPHY: 'v4/catalog/getArtistDiscography',
  CATALOG_GET_ALL_ARTIST_TRACKS: 'v4/catalog/getAllArtistTracks',
  CATALOG_GET_DETAILS_WITH_COLLABORATIONS: 'v4/catalog/getDetailsWithCollaborations',
  CATALOG_GET_ARTIST_DISCOGRAPHY_WITH_COLLABORATIONS:
    'v4/catalog/getArtistDiscographyWithCollaborations',
  CATALOG_GET_ALL_ARTIST_TRACKS_WITH_COLLABORATIONS:
    'v4/catalog/getAllArtistTracksWithCollaborations',
  CATALOG_SORT_OBJECTS: 'v4/catalog/sortObjects',
  COLLECTIONS_GET_VERSION: 'v5/collections/getVersion',
  COLLECTIONS_GET_ITEMS: 'v6/collections/getItems',
  COLLECTIONS_GET_ITEMS_BY_ARTIST: 'v5/collections/getItemsByArtist',
  COLLECTIONS_GET_SORTED_BY_TYPES_V6: 'v6/collections/getSortedByTypes',
  COLLECTIONS_GET_SORTED_BY_TYPES: 'v7/collections/getSortedByTypes',
  COLLECTIONS_GET_SORTED_PLAYLISTS: 'v6/collections/getSortedPlaylists',
  COLLECTIONS_ADD_ITEM: 'v6/collections/addItem',
  COLLECTIONS_REMOVE_ITEM: 'v6/collections/removeItem',
  PLAYLISTS_CREATE: 'v7/playlists/create',
  PLAYLISTS_ANNOTATE_PLAYLISTS: 'v7/playlists/annotatePlaylists',
  PLAYLISTS_GET_TRACKS: 'v7/playlists/getTracks',
  PLAYLISTS_EDIT_TRACKS: 'v7/playlists/editTracks',
  PLAYLISTS_APPEND_ITEMS: 'v7/playlists/appendItems',
  PLAYLISTS_DELETE_TRACKS: 'v7/playlists/deleteTracks',
  PLAYLISTS_SET_DETAILS: 'v7/playlists/setDetails',
  SOD_SEARCH: 'v3/sod/search',
  PODS_GET_PLAYLIST_AUTOFILL_SONGS: 'v5/pods/getPlaylistAutofillSongs',
  PODS_GET_PLAYLIST_SEARCH_RECOMMENDATIONS: 'v5/pods/getPlaylistSearchRecommendations',
  SEARCH_AUTOCOMPLETE: 'autocomplete',
  SET_TWITTER_TOKENS: 'v1/twitter/setUserTokens',
  GET_REQUEST_TOKEN: 'twitter/oauth/request_token',
  GET_AUTH_TOKEN: 'twitter/oauth/access_token',
  POST_STATUS_UPDATE: 'twitter/statuses/update.json',
  SEND_STATS_EVENTS: 'stats', // All stats calls go to the same url, this "endpoint" is really just used as a differentiator. @todo https://jira.savagebeast.com/browse/WEB-8689

  // Browse v1
  GET_MUSIC_RECOMMENDATION: 'v1/browse/getMusicRecommendation',
  GET_MUSIC_CATALOG: 'v1/browse/getMusicCatalog',

  // Charon
  FAMILY_PLAN_GET_RECORD: 'v2/charon/getFamilyPlanRecord',
  FAMILY_PLAN_GET_PARENT_INFO: 'v1/charon/getParentFamilyPlanInfo',
  FAMILY_PLAN_CREATE_INVITE: 'v1/charon/createFamilyPlanInvite',
  FAMILY_PLAN_RESEND_INVITE: 'v1/charon/resendFamilyPlanInviteEmail',
  FAMILY_PLAN_ACCEPT_INVITE: 'v1/charon/acceptFamilyPlanInvite',
  FAMILY_PLAN_REVOKE_INVITE: 'v1/charon/revokeFamilyPlanInvite',
  FAMILY_PLAN_REMOVE_CHILD: 'v1/charon/removeChildFromFamilyPlan',
  FAMILY_PLAN_EXIT: 'v1/charon/exitFromFamilyPlan',
  GET_DISCOUNT_VERIFICATION_INFO: 'v2/charon/eligibilityStatus',
  SUBMIT_DISCOUNT_VERIFICATION: 'v2/charon/eligibilityVerification',

  // APS
  ACTION_MODE: 'v1/action/mode',
  ACTION_PAUSE: 'v1/action/pause',
  ACTION_PREVIOUS: 'v1/action/previous',
  ACTION_REMOVE_THUMB: 'v1/action/removeThumb',
  ACTION_REPEAT: 'v1/action/repeat',
  ACTION_REPLAY: 'v1/action/replay',
  ACTION_SEEK: 'v1/action/seek',
  ACTION_SHUFFLE: 'v1/action/shuffle',
  ACTION_SKIP: 'v1/action/skip',
  ACTION_SNOOZE: 'v1/action/snooze',
  ACTION_THUMB_DOWN: 'v1/action/thumbDown',
  ACTION_THUMB_UP: 'v1/action/thumbUp',
  EVENT_ENDED: 'v1/event/ended',
  EVENT_OFFLINE: 'v1/event/offlineEvents',
  EVENT_PROGRESS: 'v1/event/progress',
  EVENT_STARTED: 'v1/event/started',
  PLAYBACK_CURRENT: 'v1/playback/current',
  PLAYBACK_ITEM: 'v1/playback/item',
  PLAYBACK_ITEM_LIST: 'v1/playback/itemList',
  PLAYBACK_MIDROLL: 'v1/playback/midroll',
  PLAYBACK_PEEK: 'v1/playback/peek',
  PLAYBACK_SOURCE: 'v1/playback/source',

  // Aesop
  AESOP_GET_DETAILS: 'v1/aesop/getDetails',
  AESOP_GET_ALL_THUMBED_EPISODES_BY_PROGRAM: 'v1/aesop/getAllThumbedEpisodesByPodcastProgram',
  AESOP_GET_ALL_EPISODES_BY_PROGRAM: 'v1/aesop/getAllEpisodesByPodcastProgram',
  AESOP_ANNOTATE_OBJECTS: 'v1/aesop/annotateObjects',
  AESOP_REMOVE_EPISODES_FEEDBACK: 'v1/aesop/removeFeedback', // cspell:disable-line

  // PLS
  PLS_GET_DIRECTORY: 'v1/feed/getDirectory',

  // SheerId
  DISCOUNT_ORG_SEARCH_AUTOCOMPLETE: 'rest/0.5/organization/typeahead',

  // Community
  COMMUNITY_SSO: 'community/sso',

  // GraphQL
  GRAPHQL: 'v1/graphql/graphql',

  // ADS - to fetch display ad targeting and flex url's
  ADS_DISPLAY_AD: 'v1/ads/displayAd',
}
